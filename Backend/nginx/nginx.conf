events {
    worker_connections 1024;
}

http {
    # Allow specific origins with credentials support
    map $http_origin $cors_origin {
        default "";
        "https://localhost:5173" $http_origin;  # Vite dev server
        "http://10.0.2.2" $http_origin;         # Flutter Android emulator
    }

    server {
        listen 443 ssl;
        server_name localhost;

        ssl_certificate /etc/nginx/certs/server-cert.pem;
        ssl_certificate_key /etc/nginx/certs/server-key.pem;

        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers 'TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM_SHA384';
        ssl_prefer_server_ciphers on;

        # General CORS headers for all routes
        add_header 'Access-Control-Allow-Origin' "$cors_origin" always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'Origin, Content-Type, Authorization' always;
        add_header 'Access-Control-Allow-Credentials' 'true' always;

        # OPTIONS handler snippet (used multiple times)
        set $cors_options_headers '
            add_header "Access-Control-Allow-Origin" "$cors_origin" always;
            add_header "Access-Control-Allow-Methods" "GET, POST, PUT, DELETE, OPTIONS" always;
            add_header "Access-Control-Allow-Headers" "Origin, Content-Type, Authorization" always;
            add_header "Access-Control-Allow-Credentials" "true" always;
            add_header "Access-Control-Max-Age" 1728000;
            add_header "Content-Type" "text/plain charset=UTF-8";
            add_header "Content-Length" 0;
            return 204;
        ';

        location /users {
            if ($request_method = 'OPTIONS') {
                add_header "Access-Control-Allow-Origin" "$cors_origin" always;
                add_header "Access-Control-Allow-Methods" "GET, POST, PUT, DELETE, OPTIONS" always;
                add_header "Access-Control-Allow-Headers" "Origin, Content-Type, Authorization" always;
                add_header "Access-Control-Allow-Credentials" "true" always;
                add_header "Access-Control-Max-Age" 1728000;
                add_header "Content-Type" "text/plain charset=UTF-8";
                add_header "Content-Length" 0;
                return 204;
            }

            proxy_pass http://user-service:9090;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /auth {
            if ($request_method = 'OPTIONS') {
                add_header "Access-Control-Allow-Origin" "$cors_origin" always;
                add_header "Access-Control-Allow-Methods" "GET, POST, PUT, DELETE, OPTIONS" always;
                add_header "Access-Control-Allow-Headers" "Origin, Content-Type, Authorization" always;
                add_header "Access-Control-Allow-Credentials" "true" always;
                add_header "Access-Control-Max-Age" 1728000;
                add_header "Content-Type" "text/plain charset=UTF-8";
                add_header "Content-Length" 0;
                return 204;
            }

            proxy_pass http://auth-service:9090;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /file {
            if ($request_method = 'OPTIONS') {
                add_header "Access-Control-Allow-Origin" "$cors_origin" always;
                add_header "Access-Control-Allow-Methods" "GET, POST, PUT, DELETE, OPTIONS" always;
                add_header "Access-Control-Allow-Headers" "Origin, Content-Type, Authorization" always;
                add_header "Access-Control-Allow-Credentials" "true" always;
                add_header "Access-Control-Max-Age" 1728000;
                add_header "Content-Type" "text/plain charset=UTF-8";
                add_header "Content-Length" 0;
                return 204;
            }

            proxy_pass http://file-service:9090;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /file-serving {
            rewrite ^/file-serving(/.*)$ $1 break;

            if ($request_method = 'OPTIONS') {
                add_header "Access-Control-Allow-Origin" "$cors_origin" always;
                add_header "Access-Control-Allow-Methods" "GET, POST, PUT, DELETE, OPTIONS" always;
                add_header "Access-Control-Allow-Headers" "Origin, Content-Type, Authorization" always;
                add_header "Access-Control-Allow-Credentials" "true" always;
                add_header "Access-Control-Max-Age" 1728000;
                add_header "Content-Type" "text/plain charset=UTF-8";
                add_header "Content-Length" 0;
                return 204;
            }

            proxy_pass http://file-serving:9090;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
}
