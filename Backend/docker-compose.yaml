services:
  user-service:
    build: ./User-Service
    ports:
      - "9090:9090"
    env_file:
      - ./User-Service/.env
    depends_on:
      postgres:
        condition: service_healthy
    restart: on-failure

  auth-service:
      build: ./Auth-Service
      ports:
        - "9091:9090"
      env_file:
        - ./Auth-Service/.env

  file-serving:
    build: ./FileServing
    ports:
      - "9092:9090"
    volumes:
      - ./SharedAssets/uploads:/app/uploads

  file-service:
    build: ./File-Service
    ports:
      - "9093:9090"
    volumes:
      - ./SharedAssets/uploads:/app/uploads

  nginx:
    build: ./nginx
    ports:
      - "443:443"
    env_file:
      - ./nginx/.nginx.env
    volumes:
      - ./nginx/certs:/etc/nginx/certs
    depends_on:
      user-service:
        condition: service_started
      auth-service:
        condition: service_started

  postgres:
    image: postgres:15
    ports:
      - "5431:5432"
    env_file:
      - ./User-Service/.env
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 10s

#  mongo:
#    image: mongo:latest
#    ports:
#      - "27018:27017"
#    volumes:
#      - mongo-data:/mongodb/data

volumes:
  postgres-data:
  mongo-data:

networks:
  user_file_network:
    driver: bridge